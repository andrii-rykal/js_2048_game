{"version":3,"sources":["scripts/main.js"],"names":["notMove","FIELD_SIZE","AMOUNT_CELLS","x","y","number","tbody","document","querySelector","rows","children","header","button","scoreValue","cells","querySelectorAll","clearCell","cell","innerText","className","start","reset","startGame","showMessage","startToRestart","map","startValue","Math","random","addCell","coordX","coordY","value","classList","add","remove","newCell","randomCell","amount","floor","typeMessage","loseMessage","winMessage","startMessage","down","i","moveDown","j","currentCell","beforeCell","sum","index","count","up","moveUp","nextCell","right","moveRight","left","moveLeft","some","collection","row","addEventListener","e","key","freeCell","downCell"],"mappings":"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","file":"main.473582a8.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst FIELD_SIZE = 4;\nconst AMOUNT_CELLS = FIELD_SIZE * FIELD_SIZE;\nlet x = 0;\nlet y = 0;\nlet number = 0;\nlet notMove;\n\nconst tbody = document.querySelector('tbody');\nconst rows = tbody.children;\nconst header = document.querySelector('.game-header');\nconst button = header.querySelector('button');\nconst scoreValue = document.querySelector('.game-score');\nconst cells = document.querySelectorAll('.field-cell');\n\nbutton.addEventListener('click', start);\n\ndocument.addEventListener('keydown', e => {\n  switch (e.key) {\n    case 'ArrowDown':\n      down();\n      break;\n\n    case 'ArrowUp':\n      up();\n      break;\n\n    case 'ArrowRight':\n      right();\n      break;\n\n    case 'ArrowLeft':\n      left();\n      break;\n  }\n\n  if (notMove) {\n    newCell();\n  }\n\n  const freeCell = some(rows, '');\n\n  if (!notMove && !freeCell) {\n    let count = 0;\n\n    for (let i = 0; i < FIELD_SIZE - 1; i++) {\n      for (let j = 0; j < FIELD_SIZE - 1; j++) {\n        const currentCell = rows[i].children[j];\n        const downCell = rows[i + 1].children[j];\n        const nextCell = rows[i].children[j + 1];\n\n        if (currentCell.innerText === downCell.innerText\n          || currentCell.innerText === nextCell.innerText) {\n          count++;\n        }\n      }\n    }\n\n    if (!count) {\n      showMessage('lose');\n    }\n  }\n\n  const win = some(rows, '2048');\n\n  if (win) {\n    showMessage('win');\n  }\n});\n\nfunction clearCell(cell) {\n  cell.innerText = '';\n  cell.className = 'field-cell';\n}\n\nfunction start() {\n  reset();\n  startGame();\n  showMessage('nothing');\n  startToRestart();\n}\n\nfunction reset() {\n  [...cells].map(cell => {\n    clearCell(cell);\n  });\n  scoreValue.innerText = 0;\n}\n\nfunction startValue() {\n  return Math.random() > 0.1 ? 2 : 4;\n}\n\nfunction addCell(coordX, coordY, value = startValue()) {\n  rows[coordY].children[coordX].innerText = value;\n  rows[coordY].children[coordX].classList.add(`field-cell--${value}`);\n  rows[coordY].children[coordX].classList.remove(`field-cell--${value / 2}`);\n}\n\nfunction newCell() {\n  randomCell(AMOUNT_CELLS);\n\n  if (rows[y].children[x].innerText === '') {\n    addCell(x, y);\n  } else {\n    newCell();\n  }\n}\n\nfunction startGame() {\n  randomCell(AMOUNT_CELLS);\n  addCell(x, y);\n  randomCell(AMOUNT_CELLS);\n  addCell(x, y);\n}\n\nfunction randomCell(amount) {\n  const random = Math.floor(Math.random() * amount);\n\n  if (number !== random) {\n    number = random;\n    x = Math.floor(number / FIELD_SIZE);\n    y = number - (x * FIELD_SIZE);\n  } else {\n    randomCell(amount);\n  }\n}\n\nfunction startToRestart() {\n  button.classList.remove('start');\n  button.classList.add('restart');\n  button.innerText = 'Restart';\n}\n\nfunction showMessage(typeMessage) {\n  const loseMessage = document.querySelector('.message-lose');\n  const winMessage = document.querySelector('.message-win');\n  const startMessage = document.querySelector('.message-start');\n\n  switch (typeMessage) {\n    case 'lose':\n      winMessage.classList.add('hidden');\n      startMessage.classList.add('hidden');\n      loseMessage.classList.remove('hidden');\n      break;\n\n    case 'win':\n      loseMessage.classList.add('hidden');\n      startMessage.classList.add('hidden');\n      winMessage.classList.remove('hidden');\n      break;\n\n    case 'nothing':\n      loseMessage.classList.add('hidden');\n      winMessage.classList.add('hidden');\n      startMessage.classList.add('hidden');\n      break;\n  }\n}\n\nfunction down() {\n  notMove = false;\n\n  for (let i = 0; i < FIELD_SIZE; i++) {\n    moveDown(i);\n\n    for (let j = FIELD_SIZE - 1; j > 0; j--) {\n      const currentCell = rows[j].children[i];\n      const beforeCell = rows[j - 1].children[i];\n\n      if (currentCell.innerText === '' || beforeCell.innerText === '') {\n        continue;\n      }\n\n      if (currentCell.innerText === beforeCell.innerText) {\n        const sum = +currentCell.innerText * 2;\n\n        addCell(i, j, sum);\n        scoreValue.innerText = +scoreValue.innerText + sum;\n        clearCell(beforeCell);\n        notMove = true;\n      }\n    }\n    moveDown(i);\n  }\n}\n\nfunction moveDown(index) {\n  let count = 0;\n\n  for (let j = FIELD_SIZE - 1; j >= 0; j--) {\n    const currentCell = rows[j].children[index];\n\n    if (currentCell.innerText === '') {\n      count++;\n      continue;\n    }\n\n    if (j !== FIELD_SIZE - 1 && count > 0) {\n      addCell(index, j + count, currentCell.innerText);\n      clearCell(currentCell);\n      count--;\n      j++;\n      notMove = true;\n    }\n  }\n}\n\nfunction up() {\n  notMove = false;\n\n  for (let i = 0; i < FIELD_SIZE; i++) {\n    moveUp(i);\n\n    for (let j = 0; j < FIELD_SIZE - 1; j++) {\n      const currentCell = rows[j].children[i];\n      const nextCell = rows[j + 1].children[i];\n\n      if (currentCell.innerText === '' || nextCell.innerText === '') {\n        continue;\n      }\n\n      if (currentCell.innerText === nextCell.innerText) {\n        const sum = +currentCell.innerText * 2;\n\n        addCell(i, j, sum);\n        scoreValue.innerText = +scoreValue.innerText + sum;\n        clearCell(nextCell);\n        notMove = true;\n      }\n    }\n    moveUp(i);\n  }\n}\n\nfunction moveUp(index) {\n  let count = 0;\n\n  for (let j = 0; j < FIELD_SIZE; j++) {\n    const currentCell = rows[j].children[index];\n\n    if (currentCell.innerText === '') {\n      count++;\n      continue;\n    }\n\n    if (j !== 0 && count > 0) {\n      addCell(index, j - count, currentCell.innerText);\n      clearCell(currentCell);\n      count--;\n      j--;\n      notMove = true;\n    }\n  }\n}\n\nfunction right() {\n  notMove = false;\n\n  for (let i = 0; i < FIELD_SIZE; i++) {\n    moveRight(i);\n\n    for (let j = FIELD_SIZE - 1; j > 0; j--) {\n      const currentCell = rows[i].children[j];\n      const beforeCell = rows[i].children[j - 1];\n\n      if (currentCell.innerText === '' || beforeCell.innerText === '') {\n        continue;\n      }\n\n      if (currentCell.innerText === beforeCell.innerText) {\n        const sum = +currentCell.innerText * 2;\n\n        addCell(j, i, sum);\n        scoreValue.innerText = +scoreValue.innerText + sum;\n        clearCell(beforeCell);\n        notMove = true;\n      }\n    }\n    moveRight(i);\n  }\n}\n\nfunction moveRight(index) {\n  let count = 0;\n\n  for (let j = FIELD_SIZE - 1; j >= 0; j--) {\n    const currentCell = rows[index].children[j];\n\n    if (currentCell.innerText === '') {\n      count++;\n      continue;\n    }\n\n    if (j !== FIELD_SIZE - 1 && count > 0) {\n      addCell(j + count, index, currentCell.innerText);\n      clearCell(currentCell);\n      count--;\n      j++;\n      notMove = true;\n    }\n  }\n}\n\nfunction left() {\n  notMove = false;\n\n  for (let i = 0; i < FIELD_SIZE; i++) {\n    moveLeft(i);\n\n    for (let j = 0; j < FIELD_SIZE - 1; j++) {\n      const currentCell = rows[i].children[j];\n      const nextCell = rows[i].children[j + 1];\n\n      if (currentCell.innerText === '' || nextCell.innerText === '') {\n        continue;\n      }\n\n      if (currentCell.innerText === nextCell.innerText) {\n        const sum = +currentCell.innerText * 2;\n\n        addCell(j, i, sum);\n        scoreValue.innerText = +scoreValue.innerText + sum;\n        clearCell(nextCell);\n        notMove = true;\n      }\n    }\n    moveLeft(i);\n  }\n}\n\nfunction moveLeft(index) {\n  let count = 0;\n\n  for (let j = 0; j < FIELD_SIZE; j++) {\n    const currentCell = rows[index].children[j];\n\n    if (currentCell.innerText === '') {\n      count++;\n      continue;\n    }\n\n    if (j !== 0 && count > 0) {\n      addCell(j - count, index, currentCell.innerText);\n      clearCell(currentCell);\n      count--;\n      j--;\n      notMove = true;\n    }\n  }\n}\n\nfunction some(collection, value) {\n  return [...collection].some(row => [...row.children]\n    .some(cell => cell.innerText === value));\n}\n"]}